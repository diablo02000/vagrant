# -*- mode: ruby -*-
# vi: set ft=ruby :

# Before using this Vagrantfile you must install the following plugins:
# - vagrant-hostnamager
# - vagrant-cachier
#
# Load plugins configuration
plugins_cfg = File.expand_path('../../common/plugins-config', __FILE__)
load plugins_cfg if File.exists?(plugins_cfg)

# Number of node to provision
VM_COUNT_MASTER_NODE=1
VM_COUNT_WORKER_NODE=3

# VMs prefix name
VM_PREFIX_NAME="kube"

#
# This Vagrantfile is setup for VirtualBox.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "debian/bullseye64"

  (1..VM_COUNT_MASTER_NODE).each do |idx|
    # Define vm hostname
    vm_name = "#{VM_PREFIX_NAME}-master#{idx}"

    config.vm.define vm_name do |cfg|
      cfg.vm.hostname = vm_name 
      cfg.vm.network "private_network", type: "dhcp"

      # Customize Virtualbox VM
      cfg.vm.provider "virtualbox" do |v|
        v.customize [ "modifyvm", :id, "--name", vm_name ]
        v.customize [ "modifyvm", :id, "--ioapic", "on" ]
        v.customize [ "modifyvm", :id, "--nictype1", "virtio" ]
      end

      # Enable provisioning with a shell script.
      # Boostrap VMs config.
      cfg.vm.provision "shell", path: "../common/bootstrap.sh"
      # Install k8s reaquirements
      cfg.vm.provision "shell", path: "./k8s-requirements.sh"
      # Install k8s reaquirements
      cfg.vm.provision "shell", path: "./k8s-master.sh"
    end
  end

  (1..VM_COUNT_WORKER_NODE).each do |idx|
    # Define vm hostname
    vm_name = "#{VM_PREFIX_NAME}-worker#{idx}"

    config.vm.define vm_name do |cfg|
      cfg.vm.hostname = vm_name 
      cfg.vm.network "private_network", type: "dhcp"

      # Customize Virtualbox VM
      cfg.vm.provider "virtualbox" do |v|
        v.customize [ "modifyvm", :id, "--name", vm_name ]
        v.customize [ "modifyvm", :id, "--ioapic", "on" ]
        v.customize [ "modifyvm", :id, "--nictype1", "virtio" ]
      end

      # Enable provisioning with a shell script.
      # Boostrap VMs config.
      cfg.vm.provision "shell", path: "../common/bootstrap.sh"
      # Install k8s reaquirements
      cfg.vm.provision "shell", path: "./k8s-requirements.sh"
      # Install k8s reaquirements
      cfg.vm.provision "shell", path: "./k8s-worker.sh"
    end
  end

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

end
